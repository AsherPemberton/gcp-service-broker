apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gcp-service-broker.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "gcp-service-broker.name" . }}
    helm.sh/chart: {{ include "gcp-service-broker.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "gcp-service-broker.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "gcp-service-broker.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["serve"]
          env:
          - name: "PORT"
            value: "8080"
          - name: "ROOT_SERVICE_ACCOUNT_JSON"
            valueFrom:
              secretKeyRef:
                name: {{ template "gcp-service-broker.fullname" . }}-creds
                key: service_account
          - name: "SECURITY_USER_NAME"
            valueFrom:
              secretKeyRef:
                name: {{ template "gcp-service-broker.fullname" . }}-auth
                key: username
          - name: "SECURITY_USER_PASSWORD"
            valueFrom:
              secretKeyRef:
                name: {{ template "gcp-service-broker.fullname" . }}-auth
                key: password
          - name: "DB_HOST"
            {{- if .Values.mysql.embedded }}
            value: {{ .Release.Name }}-mysql
            {{- else }}
            value: {{ required "A value is required for mysql.host" .Values.mysql.host }}
            {{- end }}
          - name: "DB_USERNAME"
            valueFrom:
              secretKeyRef:
                name: {{ template "gcp-service-broker.fullname" . }}-creds
                key: db_username
          - name: "DB_PASSWORD"
            valueFrom:
              secretKeyRef:
                name: {{ template "gcp-service-broker.fullname" . }}-creds
                key: db_password
          - name: "DB_PORT"
            value: {{ .Values.mysql.port | quote }}
          - name: "DB_NAME"
            value: {{ required "A value is required for mysql.mysqlDatabase" .Values.mysql.mysqlDatabase | quote }}
          - name: "CA_CERT"
            valueFrom:
              secretKeyRef:
                name: {{ template "gcp-service-broker.fullname" . }}-creds
                key: db_ca_cert
          - name: "CLIENT_CERT"
            valueFrom:
              secretKeyRef:
                name: {{ template "gcp-service-broker.fullname" . }}-creds
                key: db_client_cert
          - name: "CLIENT_KEY"
            valueFrom:
              secretKeyRef:
                name: {{ template "gcp-service-broker.fullname" . }}-creds
                key: db_client_key
          {{- range $k, $v := .Values.broker.env }}
          - name: {{ $k | quote }}
            value: {{ $v | quote}}
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /docs
              port: http
          readinessProbe:
            httpGet:
              path: /docs
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
